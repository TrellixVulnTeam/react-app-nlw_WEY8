{"version":3,"sources":["images/illustration.svg","images/logo.svg","images/google-icon.svg","components/Button.js","services/firebase.js","contexts/AuthContext.js","pages/Home.js","pages/NewRoom.js","images/copy.svg","components/RoomCode.js","components/Question.js","hooks/useRoom.js","pages/Room.js","images/check.svg","images/answer.svg","images/delete.svg","pages/AdminRoom.js","App.js","index.js"],"names":["Button","isOutlined","props","className","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","createContext","AuthContextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","singInWithGoogle","children","Home","history","useHistory","useContext","roomCode","setRoomCode","push","event","preventDefault","trim","ref","get","roomRef","exists","alert","val","endedAt","src","illustrationImg","alt","logoImg","onClick","googleIconImg","onSubmit","type","placeholder","onChange","target","NewRoom","newRoom","setNewRoom","title","authorId","firebaseRoom","key","to","RoomCode","navigator","clipboard","writeText","code","copyImg","Question","isAnswered","isHighlighted","cx","answered","highlighted","content","author","useRoom","roomId","questions","setQuestions","setTitle","on","room","databaseRoom","firebaseQuestions","parsedQuestion","Object","entries","map","likeCount","values","likes","length","likeId","find","off","Room","params","useParams","newQuestion","setNewQuenstion","question","questionId","remove","disabled","aria-label","handleLikeQuestion","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","update","Date","window","confirm","console","log","handleCheckQuestionAsAnswered","checkImg","handleHighlightQuestion","answerImg","handleDeleteQuestion","deleteImg","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31272001.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import '../styles/button.scss';\n\n\nexport function Button({isOutlined = false, ...props}){\n    \n\n    return(\n        <button \n        className={`button ${isOutlined ? 'outlined' : ''}` }\n        {...props} >\n        </button>\n    )\n}","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain:  process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\n  firebase.initializeApp(firebaseConfig)\n\nconst auth = firebase.auth();\nconst database = firebase.database();\n\nexport {firebase,auth,database}","import { createContext, useEffect, useState } from \"react\"\nimport { auth ,firebase} from \"../services/firebase\"\n\n\nexport const AuthContext = createContext({})\n\n\n\n\nexport function AuthContextProvider(props){\n\n    const [user, setUser ] = useState()\n    useEffect(() => {\n      const unsubscribe = auth.onAuthStateChanged(user => {\n        if(user){\n          const {displayName , photoURL, uid} = user\n          if(!displayName){\n            throw new Error ('Missin information from Google Account.')\n          }\n        setUser({\n          id:uid,\n          name:displayName,\n          avatar:photoURL\n        })\n        }\n      })\n    \n    return () => {\n      unsubscribe()\n    }\n    \n    }, [])\n    \n     async function singInWithGoogle(){\n        const provider = new firebase.auth.GoogleAuthProvider()\n        const result = await auth.signInWithPopup(provider)\n    if(result.user) {\n      const {displayName , photoURL, uid} = result.user\n      if(!displayName){\n        throw new Error ('Missin information from Google Account.')\n      }\n    setUser({\n      id:uid,\n      name:displayName,\n      avatar:photoURL\n    })\n    \n    \n    \n    }\n        }\n    \n\n    return(\n        <AuthContext.Provider value={{ user,singInWithGoogle}}>\n            {props.children}\n</AuthContext.Provider>\n\n    )\n}","import illustrationImg from '../images/illustration.svg'\nimport logoImg from '../images/logo.svg'\nimport googleIconImg from '../images/google-icon.svg'\nimport '.././styles/auth.scss'\nimport { Button } from '../components/Button'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../contexts/AuthContext'\nimport { useContext, useState} from 'react'\nimport { database } from '../services/firebase'\n\n\nexport function Home(){\n\n    const history = useHistory();\n\nconst {user , singInWithGoogle } = useContext(AuthContext)\n\nconst [roomCode,setRoomCode] = useState('')\n\n\n  async  function handleCreateRoom(){\n  if(!user){\n    await singInWithGoogle()\n  }\n            history.push('/rooms/new');\n\n        \n\n    }\n\n\nasync function handleJoinRoom(event){\n    event.preventDefault()\n\n    if(roomCode.trim() ==='') {\n        return\n    }\n    const roomRef = await database.ref(`rooms/${roomCode}`).get()\n    if(!roomRef.exists()){\n        alert('Room does not exists.')\n        return\n    }\n\nif(roomRef.val().endedAt){\n    alert('Sala encerrada pelo admin');\n    return;\n}\n\n    history.push(`rooms/${roomCode}`)\n\n}\n\nreturn(\n<div id=\"page-auth\" >\n<aside>\n<img src={illustrationImg} alt='Perguntas e Respostas' />\n    <strong>Crie salas de Q&amp;A ao-vivo </strong>\n    <p>Tire as dúvidas da sua audiẽncia em tempo- real </p>\n\n\n\n</aside>\n\n<main>\n<div className='main-content' >\n<img src={logoImg} alt='logo-letmeask'/>\n<button onClick={handleCreateRoom} className='create-room' >\n<img src={googleIconImg} alt='google'/>\n\n    Crie sua sala com o Google\n</button>\n\n<div className='separator' >ou entre em uma sala</div>\n<form onSubmit={handleJoinRoom} >\n    <input\n    type='text'\n    placeholder='Digite o códico da sala'\n    onChange={event => setRoomCode(event.target.value)}\n    value={roomCode}\n    />\n \n<Button type='submit' >\nEntrar na sala\n\n\n</Button>\n\n\n</form>\n\n</div>\n\n\n</main>\n\n\n</div>\n\n\n\n)\n\n}","import illustrationImg from '../images/illustration.svg'\nimport logoImg from '../images/logo.svg'\nimport '.././styles/auth.scss'\nimport { Button } from '../components/Button'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useContext, useState } from 'react'\nimport { AuthContext } from '../contexts/AuthContext'\nimport { database } from '../services/firebase'\n\n\n\nexport function NewRoom(){\n    const {user} = useContext(AuthContext)\nconst history = useHistory()\nconst [newRoom,setNewRoom] = useState('')\n\nasync function handleCreateRoom(event){\nevent.preventDefault()\n\nif(newRoom.trim() ===''){\n    return\n}\n\nconst  roomRef = database.ref('rooms')\nconst firebaseRoom = await roomRef.push({\n    title :newRoom,\n    authorId: user.id,\n})\n\nhistory.push(`/rooms/${firebaseRoom.key}`)\n\n}\n    return(\n        <div id=\"page-auth\" >\n        <aside>\n        <img src={illustrationImg} alt='Perguntas e Respostas' />\n            <strong>Crie salas de Q&amp;A ao-vivo </strong>\n            <p>Tire as dúvidas da sua audiẽncia em tempo- real </p>\n        \n        \n        \n        </aside>\n        \n        <main>\n        <div className='main-content' >\n        <img src={logoImg} alt='logo-letmeask'/>\n<h2>Criar uma nova sala</h2>      \n        <form onSubmit={handleCreateRoom} >\n            <input\n            type='text'\n            placeholder='Nome da sala'\n            onChange={event => setNewRoom(event.target.value)}\n            value={newRoom}\n            />\n         \n        <Button type='submit' >\n        Criar sala\n        \n        \n        </Button>\n        \n        \n        </form>\n        <p>Quer entrar em uma sala existente ? <Link to='/' >Clique aqui</Link> </p>\n        </div>\n        \n        \n        </main>\n        \n        \n        </div>\n        \n        \n        \n        )\n        \n\n\n}","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","import copyImg from '../images/copy.svg'\nimport '.././styles/room-code.scss'\n\n\nexport function RoomCode(props){\n\n    function copyRoomCodeToClipboard(){\n        navigator.clipboard.writeText(props.code)\n    }\n    return(\n        <button className='room-code'  onClick={copyRoomCodeToClipboard}>\n            <div>\n                <img src={copyImg} alt='copiar room code '/>\n            </div>\n            <span> Sala {props.code}</span>\n        </button>\n    )\n}","import '.././styles/question.scss';\n//import {ReactNode} from 'react'\nimport cx from 'classnames'\n\nexport function Question({\n    isAnswered = false,\n    isHighlighted = false,\n    ...props}){\nreturn(\n<div  className={cx(\n    'question',\n    {answered: isAnswered},\n    { highlighted: isHighlighted && !isAnswered}\n    )}>\n<p>\n    {props.content}\n</p>\n<footer>\n    <div className='user-info'>\n<img src={props.author.avatar} alt={props.author.name}/>\n<span >{props.author.name}</span>\n    </div>\n    <div>\n        {props.children}\n    </div>\n</footer>\n</div>\n)\n\n}","\nimport { useContext, useEffect, useState} from 'react'\nimport { AuthContext } from '../contexts/AuthContext'\nimport {database} from '../services/firebase'\n\nexport function useRoom(roomId){\nconst [questions, setQuestions] = useState([])\nconst [title, setTitle] = useState('')\nconst { user } = useContext(AuthContext)\n\n\nuseEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n   roomRef.on('value', room => {\n        const databaseRoom = room.val()\n        const firebaseQuestions = databaseRoom.questions ?? {}\nconst parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\nreturn {\n    id: key,\n    content: value.content,\n    author: value.author,\n    isHighlighted: value.isHighlighted,\n    isAnswered: value.isAnswered,\n    likeCount: Object.values(value.likes ?? {}).length,\n    likeId: Object.entries(value.likes ?? {}).find(([key,like]) => like.authorId === user?.id)?.[0],\n}})\n\nsetTitle(databaseRoom.title)\nsetQuestions(parsedQuestion)\n\n    })\n\n    return () => {\n        roomRef.off('value')\n    }\n},[roomId,user?.id])\n\nreturn{questions,title}\n}","import { Button } from \"../components/Button\";\nimport '.././styles/room.scss'\nimport logoImg from '../images/logo.svg'\nimport { RoomCode } from \"../components/RoomCode\";\nimport { Link, useParams } from 'react-router-dom'\nimport { database } from \"../services/firebase\";\nimport { AuthContext } from '../contexts/AuthContext'\nimport { useContext/* , useEffect */, useState } from 'react'\nimport { Question } from \"../components/Question\";\nimport { useRoom } from \"../hooks/useRoom\";\n\nexport function Room() {\n    const { user } = useContext(AuthContext)\n    const params = useParams()\n    const roomId = params.id\n    /*const [questions, setQuestions] = useState([])\n    const [title, setTitle] = useState('')\n    \n    \n     useEffect(() => {\n        const roomRef = database.ref(`rooms/${roomId}`);\n        roomRef.on('value', room => {\n            const databaseRoom = room.val()\n            const firebaseQuestions = databaseRoom.questions ?? {}\n    const parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\n    return {\n        id: key,\n        content: value.content,\n        author: value.author,\n        isHighlighted: value.isHighlighted,\n        isAnswered: value.isAnswered\n    }})\n    \n    setTitle(databaseRoom.title)\n    setQuestions(parsedQuestion)\n    \n        })\n    },[roomId]) */\n\n    const [newQuestion, setNewQuenstion] = useState('')\n    const { title, questions } = useRoom(roomId)\n\n    async function handleSendQuestion(event) {\n        event.preventDefault()\n        if (newQuestion.trim() === '') {\n            return;\n        }\n        if (!user) {\n            throw new Error('voce nao fez login');\n        }\n\n        const question = {\n            content: newQuestion,\n            author: {\n                name: user.name,\n                avatar: user.avatar\n            },\n            isHighlighted: false,\n            isAnswered: false\n        };\n\n        await database.ref(`rooms/${roomId}/questions`).push(question);\n        setNewQuenstion('')\n    }\n\n    async function handleLikeQuestion(questionId,likeId){\n        if(likeId){\n            await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`).remove()\n    } else {\n        await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\n            authorId: user?.id,\n\n        })\n    }\n    }\n    return (\n        <div id='page-room'>\n\n            <header>\n\n                <div className='content'>\n                    <img src={logoImg} alt='letmeask' />\n                    <RoomCode code={params.id}></RoomCode>\n                </div>\n            </header>\n            <main >\n                <div className='room-title' >\n                    <h1>Sala {title}</h1>\n                    {questions.length > 0 && <span> {questions.length} pergunta(s)</span>}\n                </div>\n                <Link to={`/admin/rooms/${roomId}`} >Admin</Link>\n                <form onSubmit={handleSendQuestion} >\n                    <textarea\n                        placeholder='O que voce quer perguntar?'\n                        onChange={event => setNewQuenstion(event.target.value)}\n                        value={newQuestion}\n                    />\n                    <div className='form-footer'>\n                        {user ? (\n                            <div className='user-info'>\n                                <img src={user.avatar} alt={user.name} />\n                                <span>{user.name}</span>\n                            </div>\n                        ) : (\n                            <span>\n                                Para enviar uma pergunta, <button>faça seu login</button>\n                            </span>\n                        )}\n                        <Button type='submit' disabled={!user} >Enviar pergunta</Button>\n                    </div>\n                </form>\n                <div className='question-list'>\n                    {questions.map(question => {\n                        return (\n                            <Question key={question.id} \n                            content={question.content} \n                            author={question.author} \n                            isAnswered={question.isAnswered}\n                            isHighlighted={question.isHighlighted} \n                            >\n\n                                <button\n                                    className={`like-button ${question.likeId ? 'liked' : ''}`}\n                                    type='button'\n                                    aria-label='Marcar favorito'\n                                    onClick={()=>handleLikeQuestion(question.id,question.likeId)}\n                                >\n                                {question.likeCount > 0 && <span>{question.likeCount}</span>}\n                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                    </svg>\n\n                                </button>\n                            </Question>\n                        )\n                    })}\n                </div>\n            </main>\n\n\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/check.5dfa6ed6.svg\";","export default __webpack_public_path__ + \"static/media/answer.4502a8d5.svg\";","export default __webpack_public_path__ + \"static/media/delete.22ba6e00.svg\";","import { Button } from \"../components/Button\";\nimport '.././styles/room.scss'\nimport logoImg from '../images/logo.svg'\nimport checkImg from '../images/check.svg'\nimport answerImg from '../images/answer.svg'\n\nimport { RoomCode } from \"../components/RoomCode\";\nimport {useParams} from 'react-router-dom'\nimport { database } from \"../services/firebase\";\n//import { AuthContext } from '../contexts/AuthContext'\n//import { /* useContext ,*/  useState} from 'react'\nimport { Question } from \"../components/Question\";\nimport { useRoom } from \"../hooks/useRoom\";\nimport deleteImg from '../images/delete.svg'\nimport { useHistory } from 'react-router-dom'\n\n\nexport function AdminRoom(){\n   // const {user} = useContext(AuthContext)\nconst params = useParams()\nconst roomId = params.id\n/*const [questions, setQuestions] = useState([])\nconst [title, setTitle] = useState('')\n\n\n useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on('value', room => {\n        const databaseRoom = room.val()\n        const firebaseQuestions = databaseRoom.questions ?? {}\nconst parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\nreturn {\n    id: key,\n    content: value.content,\n    author: value.author,\n    isHighlighted: value.isHighlighted,\n    isAnswered: value.isAnswered\n}})\n\nsetTitle(databaseRoom.title)\nsetQuestions(parsedQuestion)\n\n    })\n},[roomId]) */\nconst history = useHistory()\n\n//const [newQuestion, setNewQuenstion] = useState('')\n const{title, questions} = useRoom(roomId)\n\nconsole.log(questions)\n\nasync function handleEndRoom(){\n    database.ref(`rooms/${roomId}`).update({\n        endedAt: new Date(),\n    })\n\n    history.push('/')\n}\n\n\nasync function handleDeleteQuestion(questionId){\nif(window.confirm('Tem certeza que voce desaja excluir esta pergunta')){\nawait database.ref(`rooms/${roomId}/questions/${questionId}`).remove()\n}\n }\n\n \nasync function handleCheckQuestionAsAnswered(questionId){\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n        isAnswered: true,\n    })\n    \n}\n\nasync function handleHighlightQuestion(questionId){\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n        isHighlighted: true,\n    })\n\n}\n\n    return (\n<div id='page-room'>\n\n    <header>\n\n        <div className='content'>\n            <img src={logoImg} alt='letmeask'/>\n          <div>\n               <RoomCode code={params.id}></RoomCode>\n           <Button isOutlined={true} onClick={handleEndRoom} > Encerrar Sala </Button>\n           </div>\n        </div>\n    </header>\n<main >\n    <div className='room-title' >\n        <h1>Sala {title}</h1>\n        {questions.length > 0 && <span> {questions.length} pergunta(s)</span>}\n    </div>\n    \n<div className='question-list'>\n    {questions.map(question=>{\nreturn (\n    <Question\n     key={question.id}\n      content={question.content}\n        author={question.author}\n        isAnswered={question.isAnswered}\n        isHighlighted={question.isHighlighted}\n        > \n        \n\n      {!question.isAnswered && (\n          <>\n          <button\n          type='button'\n          onClick={() => handleCheckQuestionAsAnswered(question.id)}\n          >\n              <img src={checkImg} alt='marcar como respondida'/>\n          </button>\n  \n          <button\n          type='button'\n          onClick={() => handleHighlightQuestion(question.id)}\n          >\n              <img src={answerImg} alt='destacar'/>\n          </button>\n</>\n          )}\n\n        <button\n        type='button'\n        onClick={() => handleDeleteQuestion(question.id)}\n        >\n            <img src={deleteImg} alt='remover pergunta'/>\n        </button>\n\n        </Question>\n)\n    })} \n</div>\n</main>\n\n\n</div>\n        )\n}","import { Home } from \"./pages/Home\";\n//import {createContext, useState, useEffect} from 'react'\nimport{ BrowserRouter, Route, Switch} from 'react-router-dom'\nimport { NewRoom } from \"./pages/NewRoom\";\n//import {firebase, auth, database} from './services/firebase'\nimport { AuthContextProvider } from './contexts/AuthContext'\nimport { Room } from \"./pages/Room\";\nimport { AdminRoom } from \"./pages/AdminRoom\";\n\n\nfunction App() {\n \n\n  \n  return (\n   <BrowserRouter>\n   <AuthContextProvider>\n     <Switch>\n   <Route path='/' exact component={Home}/>\n   <Route path='/rooms/new' component={NewRoom}/>\n   <Route path='/rooms/:id' component={Room}/>\n   <Route path='/admin/rooms/:id' component={AdminRoom}/>\n   </Switch>\n   </AuthContextProvider>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/global.scss'\nimport './services/firebase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}