{"ast":null,"code":"var _jsxFileName = \"/home/cf/Documentos/nlw/letmeask/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Home } from \"./pages/Home\";\nimport { createContext, useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { firebase, auth, database } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          photoUrl,\n          uid\n        } = user;\n\n        if (!displayName) {\n          throw new Error('Missin information from Google Account.');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoUrl\n        });\n      }\n    });\n  }, []);\n\n  async function singInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provider);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoUrl,\n        uid\n      } = result.user;\n\n      if (!displayName) {\n        throw new Error('Missin information from Google Account.');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoUrl\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        singInWithGoogle\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"qe8ATqlJZgCfqMFVj3Q4TN23kL8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cf/Documentos/nlw/letmeask/src/App.js"],"names":["Home","createContext","useState","useEffect","BrowserRouter","Route","NewRoom","firebase","auth","database","AuthContext","App","user","setUser","onAuthStateChanged","displayName","photoUrl","uid","Error","id","name","avatar","singInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAAQC,aAAR,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAAQC,aAAR,EAAuBC,KAAvB,QAAmC,kBAAnC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,QAAxB,QAAuC,qBAAvC;;AAGA,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASU,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAmBX,QAAQ,EAAjC;AACFC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,IAAI,CAACM,kBAAL,CAAwBF,IAAI,IAAI;AAC9B,UAAGA,IAAH,EAAQ;AACN,cAAM;AAACG,UAAAA,WAAD;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAgCL,IAAtC;;AACA,YAAG,CAACG,WAAJ,EAAgB;AACd,gBAAM,IAAIG,KAAJ,CAAW,yCAAX,CAAN;AACD;;AACHL,QAAAA,OAAO,CAAC;AACNM,UAAAA,EAAE,EAACF,GADG;AAENG,UAAAA,IAAI,EAACL,WAFC;AAGNM,UAAAA,MAAM,EAACL;AAHD,SAAD,CAAP;AAKC;AACF,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT;;AAgBC,iBAAeM,gBAAf,GAAiC;AAC9B,UAAMC,QAAQ,GAAG,IAAIhB,QAAQ,CAACC,IAAT,CAAcgB,kBAAlB,EAAjB;AACA,UAAMC,MAAM,GAAG,MAAMjB,IAAI,CAACkB,eAAL,CAAqBH,QAArB,CAArB;;AACJ,QAAGE,MAAM,CAACb,IAAV,EAAgB;AACd,YAAM;AAACG,QAAAA,WAAD;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAgCQ,MAAM,CAACb,IAA7C;;AACA,UAAG,CAACG,WAAJ,EAAgB;AACd,cAAM,IAAIG,KAAJ,CAAW,yCAAX,CAAN;AACD;;AACHL,MAAAA,OAAO,CAAC;AACNM,QAAAA,EAAE,EAACF,GADG;AAENG,QAAAA,IAAI,EAACL,WAFC;AAGNM,QAAAA,MAAM,EAACL;AAHD,OAAD,CAAP;AAQC;AACI;;AAIH,sBACC,QAAC,aAAD;AAAA,2BACA,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEJ,QAAAA,IAAF;AAAOU,QAAAA;AAAP,OAA7B;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEtB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEM;AAApC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADD;AAQD;;GA/CQK,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import { Home } from \"./pages/Home\";\nimport {createContext, useState, useEffect} from 'react'\nimport{ BrowserRouter, Route} from 'react-router-dom'\nimport { NewRoom } from \"./pages/NewRoom\";\nimport {firebase, auth, database} from './services/firebase'\n\n\nexport const AuthContext = createContext({})\n\nfunction App() {\n  const [user, setUser ] = useState()\nuseEffect(() => {\n  auth.onAuthStateChanged(user => {\n    if(user){\n      const {displayName , photoUrl, uid} = user\n      if(!displayName){\n        throw new Error ('Missin information from Google Account.')\n      }\n    setUser({\n      id:uid,\n      name:displayName,\n      avatar:photoUrl\n    })\n    }\n  })\n}, [])\n\n async function singInWithGoogle(){\n    const provider = new firebase.auth.GoogleAuthProvider()\n    const result = await auth.signInWithPopup(provider)\nif(result.user) {\n  const {displayName , photoUrl, uid} = result.user\n  if(!displayName){\n    throw new Error ('Missin information from Google Account.')\n  }\nsetUser({\n  id:uid,\n  name:displayName,\n  avatar:photoUrl\n})\n\n\n\n}\n    }\n\n\n  \n  return (\n   <BrowserRouter>\n   <AuthContext.Provider value={{ user,singInWithGoogle}}>\n   <Route path='/' exact component={Home}/>\n   <Route path='/rooms/new' component={NewRoom}/>\n   </AuthContext.Provider>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}