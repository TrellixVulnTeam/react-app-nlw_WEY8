{"ast":null,"code":"import _regeneratorRuntime from\"/home/cf/Documentos/nlw/react-app-nlw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/cf/Documentos/nlw/react-app-nlw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/cf/Documentos/nlw/react-app-nlw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button}from\"../components/Button\";import'.././styles/room.scss';import logoImg from\"../images/logo.svg\";import{RoomCode}from\"../components/RoomCode\";import{useParams}from'react-router-dom';import{database}from\"../services/firebase\";import{AuthContext}from'../contexts/AuthContext';import{useContext/* , useEffect */,useState}from'react';import{Question}from\"../components/Question\";import{useRoom}from\"../hooks/useRoom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Room(){var _useContext=useContext(AuthContext),user=_useContext.user;var params=useParams();var roomId=params.id;/*const [questions, setQuestions] = useState([])\n    const [title, setTitle] = useState('')\n    \n    \n     useEffect(() => {\n        const roomRef = database.ref(`rooms/${roomId}`);\n        roomRef.on('value', room => {\n            const databaseRoom = room.val()\n            const firebaseQuestions = databaseRoom.questions ?? {}\n    const parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\n    return {\n        id: key,\n        content: value.content,\n        author: value.author,\n        isHighlighted: value.isHighlighted,\n        isAnswered: value.isAnswered\n    }})\n    \n    setTitle(databaseRoom.title)\n    setQuestions(parsedQuestion)\n    \n        })\n    },[roomId]) */var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newQuestion=_useState2[0],setNewQuenstion=_useState2[1];var _useRoom=useRoom(roomId),title=_useRoom.title,questions=_useRoom.questions;function handleSendQuestion(_x){return _handleSendQuestion.apply(this,arguments);}function _handleSendQuestion(){_handleSendQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var question;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(newQuestion.trim()==='')){_context.next=3;break;}return _context.abrupt(\"return\");case 3:if(user){_context.next=5;break;}throw new Error('voce nao fez login');case 5:question={content:newQuestion,author:{name:user.name,avatar:user.avatar},isHighlighted:false,isAnswered:false};_context.next=8;return database.ref(\"rooms/\".concat(roomId,\"/questions\")).push(question);case 8:setNewQuenstion('');case 9:case\"end\":return _context.stop();}}},_callee);}));return _handleSendQuestion.apply(this,arguments);}function handleLikeQuestion(_x2,_x3){return _handleLikeQuestion.apply(this,arguments);}function _handleLikeQuestion(){_handleLikeQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(questionId,likeId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!likeId){_context2.next=5;break;}_context2.next=3;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId,\"/likes/\").concat(likeId)).remove();case 3:_context2.next=7;break;case 5:_context2.next=7;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId,\"/likes\")).push({authorId:user===null||user===void 0?void 0:user.id});case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _handleLikeQuestion.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{id:\"page-room\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoImg,alt:\"letmeask\"}),/*#__PURE__*/_jsx(RoomCode,{code:params.id})]})}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-title\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Sala \",title]}),questions.length>0&&/*#__PURE__*/_jsxs(\"span\",{children:[\" \",questions.length,\" pergunta(s)\"]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendQuestion,children:[/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"O que voce quer perguntar?\",onChange:function onChange(event){return setNewQuenstion(event.target.value);},value:newQuestion}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-footer\",children:[user?/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:user.avatar,alt:user.name}),/*#__PURE__*/_jsx(\"span\",{children:user.name})]}):/*#__PURE__*/_jsxs(\"span\",{children:[\"Para enviar uma pergunta, \",/*#__PURE__*/_jsx(\"button\",{children:\"fa\\xE7a seu login\"})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:!user,children:\"Enviar pergunta\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-list\",children:questions.map(function(question){return/*#__PURE__*/_jsx(Question,{content:question.content,author:question.author,isAnswered:question.isAnswered,isHighlighted:question.isHighlighted,children:/*#__PURE__*/_jsxs(\"button\",{className:\"like-button \".concat(question.likeId?'liked':''),type:\"button\",\"aria-label\":\"Marcar favorito\",onClick:function onClick(){return handleLikeQuestion(question.id,question.likeId);},children:[question.likeCount>0&&/*#__PURE__*/_jsx(\"span\",{children:question.likeCount}),/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\",stroke:\"#737380\",strokeWidth:\"1.5\",strokeLinecap:\"round\",strokeLinejoin:\"round\"})})]})},question.id);})})]})]});}","map":{"version":3,"sources":["/home/cf/Documentos/nlw/react-app-nlw/src/pages/Room.js"],"names":["Button","RoomCode","useParams","database","AuthContext","useContext","useState","Question","useRoom","Room","user","params","roomId","id","newQuestion","setNewQuenstion","title","questions","handleSendQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHighlighted","isAnswered","ref","push","handleLikeQuestion","questionId","likeId","remove","authorId","logoImg","length","target","value","map","likeCount"],"mappings":"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","sourcesContent":["import { Button } from \"../components/Button\";\nimport '.././styles/room.scss'\nimport logoImg from '../images/logo.svg'\nimport { RoomCode } from \"../components/RoomCode\";\nimport { useParams } from 'react-router-dom'\nimport { database } from \"../services/firebase\";\nimport { AuthContext } from '../contexts/AuthContext'\nimport { useContext/* , useEffect */, useState } from 'react'\nimport { Question } from \"../components/Question\";\nimport { useRoom } from \"../hooks/useRoom\";\n\nexport function Room() {\n    const { user } = useContext(AuthContext)\n    const params = useParams()\n    const roomId = params.id\n    /*const [questions, setQuestions] = useState([])\n    const [title, setTitle] = useState('')\n    \n    \n     useEffect(() => {\n        const roomRef = database.ref(`rooms/${roomId}`);\n        roomRef.on('value', room => {\n            const databaseRoom = room.val()\n            const firebaseQuestions = databaseRoom.questions ?? {}\n    const parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\n    return {\n        id: key,\n        content: value.content,\n        author: value.author,\n        isHighlighted: value.isHighlighted,\n        isAnswered: value.isAnswered\n    }})\n    \n    setTitle(databaseRoom.title)\n    setQuestions(parsedQuestion)\n    \n        })\n    },[roomId]) */\n\n    const [newQuestion, setNewQuenstion] = useState('')\n    const { title, questions } = useRoom(roomId)\n\n    async function handleSendQuestion(event) {\n        event.preventDefault()\n        if (newQuestion.trim() === '') {\n            return;\n        }\n        if (!user) {\n            throw new Error('voce nao fez login');\n        }\n\n        const question = {\n            content: newQuestion,\n            author: {\n                name: user.name,\n                avatar: user.avatar\n            },\n            isHighlighted: false,\n            isAnswered: false\n        };\n\n        await database.ref(`rooms/${roomId}/questions`).push(question);\n        setNewQuenstion('')\n    }\n\n    async function handleLikeQuestion(questionId,likeId){\n        if(likeId){\n            await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`).remove()\n    } else {\n        await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\n            authorId: user?.id,\n\n        })\n    }\n    }\n    return (\n        <div id='page-room'>\n\n            <header>\n\n                <div className='content'>\n                    <img src={logoImg} alt='letmeask' />\n                    <RoomCode code={params.id}></RoomCode>\n                </div>\n            </header>\n            <main >\n                <div className='room-title' >\n                    <h1>Sala {title}</h1>\n                    {questions.length > 0 && <span> {questions.length} pergunta(s)</span>}\n                </div>\n                <form onSubmit={handleSendQuestion} >\n                    <textarea\n                        placeholder='O que voce quer perguntar?'\n                        onChange={event => setNewQuenstion(event.target.value)}\n                        value={newQuestion}\n                    />\n                    <div className='form-footer'>\n                        {user ? (\n                            <div className='user-info'>\n                                <img src={user.avatar} alt={user.name} />\n                                <span>{user.name}</span>\n                            </div>\n                        ) : (\n                            <span>\n                                Para enviar uma pergunta, <button>faça seu login</button>\n                            </span>\n                        )}\n                        <Button type='submit' disabled={!user} >Enviar pergunta</Button>\n                    </div>\n                </form>\n                <div className='question-list'>\n                    {questions.map(question => {\n                        return (\n                            <Question key={question.id} \n                            content={question.content} \n                            author={question.author} \n                            isAnswered={question.isAnswered}\n                            isHighlighted={question.isHighlighted} \n                            >\n\n                                <button\n                                    className={`like-button ${question.likeId ? 'liked' : ''}`}\n                                    type='button'\n                                    aria-label='Marcar favorito'\n                                    onClick={()=>handleLikeQuestion(question.id,question.likeId)}\n                                >\n                                {question.likeCount > 0 && <span>{question.likeCount}</span>}\n                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                    </svg>\n\n                                </button>\n                            </Question>\n                        )\n                    })}\n                </div>\n            </main>\n\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}