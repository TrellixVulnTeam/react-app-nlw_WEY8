{"ast":null,"code":"import _regeneratorRuntime from\"/home/cf/Documentos/nlw/react-app-nlw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/cf/Documentos/nlw/react-app-nlw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Button}from\"../components/Button\";import'.././styles/room.scss';import logoImg from\"../images/logo.svg\";import checkImg from\"../images/check.svg\";import answerImg from\"../images/answer.svg\";import{RoomCode}from\"../components/RoomCode\";import{useParams}from'react-router-dom';import{database}from\"../services/firebase\";//import { AuthContext } from '../contexts/AuthContext'\n//import { /* useContext ,*/  useState} from 'react'\nimport{Question}from\"../components/Question\";import{useRoom}from\"../hooks/useRoom\";import deleteImg from\"../images/delete.svg\";import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function AdminRoom(){// const {user} = useContext(AuthContext)\nvar params=useParams();var roomId=params.id;/*const [questions, setQuestions] = useState([])\nconst [title, setTitle] = useState('')\n\n\n useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on('value', room => {\n        const databaseRoom = room.val()\n        const firebaseQuestions = databaseRoom.questions ?? {}\nconst parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\nreturn {\n    id: key,\n    content: value.content,\n    author: value.author,\n    isHighlighted: value.isHighlighted,\n    isAnswered: value.isAnswered\n}})\n\nsetTitle(databaseRoom.title)\nsetQuestions(parsedQuestion)\n\n    })\n},[roomId]) */var history=useHistory();//const [newQuestion, setNewQuenstion] = useState('')\nvar _useRoom=useRoom(roomId),title=_useRoom.title,questions=_useRoom.questions;console.log(questions);function handleEndRoom(){return _handleEndRoom.apply(this,arguments);}function _handleEndRoom(){_handleEndRoom=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:database.ref(\"rooms/\".concat(roomId)).update({endedAt:new Date()});history.push('/');case 2:case\"end\":return _context.stop();}}},_callee);}));return _handleEndRoom.apply(this,arguments);}function handleDeleteQuestion(_x){return _handleDeleteQuestion.apply(this,arguments);}function _handleDeleteQuestion(){_handleDeleteQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(questionId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!window.confirm('Tem certeza que voce desaja excluir esta pergunta')){_context2.next=3;break;}_context2.next=3;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).remove();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _handleDeleteQuestion.apply(this,arguments);}function handleCheckQuestionAsAnswered(_x2){return _handleCheckQuestionAsAnswered.apply(this,arguments);}function _handleCheckQuestionAsAnswered(){_handleCheckQuestionAsAnswered=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(questionId){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isAnswered:true});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return _handleCheckQuestionAsAnswered.apply(this,arguments);}function handleHighlightQuestion(_x3){return _handleHighlightQuestion.apply(this,arguments);}function _handleHighlightQuestion(){_handleHighlightQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(questionId){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isHighlighted:true});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return _handleHighlightQuestion.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{id:\"page-room\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoImg,alt:\"letmeask\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RoomCode,{code:params.id}),/*#__PURE__*/_jsx(Button,{isOutlined:true,onClick:handleEndRoom,children:\" Encerrar Sala \"})]})]})}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-title\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Sala \",title]}),questions.length>0&&/*#__PURE__*/_jsxs(\"span\",{children:[\" \",questions.length,\" pergunta(s)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-list\",children:questions.map(function(question){return/*#__PURE__*/_jsxs(Question,{content:question.content,author:question.author,isAnswered:question.isAnswered,isHighlighted:question.isHighlighted,children:[!question.isAnswered&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleCheckQuestionAsAnswered(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:checkImg,alt:\"marcar como respondida\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleHighlightQuestion(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:answerImg,alt:\"destacar\"})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleDeleteQuestion(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:deleteImg,alt:\"remover pergunta\"})})]},question.id);})})]})]});}","map":{"version":3,"sources":["/home/cf/Documentos/nlw/react-app-nlw/src/pages/AdminRoom.js"],"names":["Button","RoomCode","useParams","database","Question","useRoom","useHistory","AdminRoom","params","roomId","id","history","title","questions","console","log","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","isAnswered","handleHighlightQuestion","isHighlighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg"],"mappings":"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","sourcesContent":["import { Button } from \"../components/Button\";\nimport '.././styles/room.scss'\nimport logoImg from '../images/logo.svg'\nimport checkImg from '../images/check.svg'\nimport answerImg from '../images/answer.svg'\n\nimport { RoomCode } from \"../components/RoomCode\";\nimport {useParams} from 'react-router-dom'\nimport { database } from \"../services/firebase\";\n//import { AuthContext } from '../contexts/AuthContext'\n//import { /* useContext ,*/  useState} from 'react'\nimport { Question } from \"../components/Question\";\nimport { useRoom } from \"../hooks/useRoom\";\nimport deleteImg from '../images/delete.svg'\nimport { useHistory } from 'react-router-dom'\n\n\nexport function AdminRoom(){\n   // const {user} = useContext(AuthContext)\nconst params = useParams()\nconst roomId = params.id\n/*const [questions, setQuestions] = useState([])\nconst [title, setTitle] = useState('')\n\n\n useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on('value', room => {\n        const databaseRoom = room.val()\n        const firebaseQuestions = databaseRoom.questions ?? {}\nconst parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\nreturn {\n    id: key,\n    content: value.content,\n    author: value.author,\n    isHighlighted: value.isHighlighted,\n    isAnswered: value.isAnswered\n}})\n\nsetTitle(databaseRoom.title)\nsetQuestions(parsedQuestion)\n\n    })\n},[roomId]) */\nconst history = useHistory()\n\n//const [newQuestion, setNewQuenstion] = useState('')\n const{title, questions} = useRoom(roomId)\n\nconsole.log(questions)\n\nasync function handleEndRoom(){\n    database.ref(`rooms/${roomId}`).update({\n        endedAt: new Date(),\n    })\n\n    history.push('/')\n}\n\n\nasync function handleDeleteQuestion(questionId){\nif(window.confirm('Tem certeza que voce desaja excluir esta pergunta')){\nawait database.ref(`rooms/${roomId}/questions/${questionId}`).remove()\n}\n }\n\n \nasync function handleCheckQuestionAsAnswered(questionId){\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n        isAnswered: true,\n    })\n    \n}\n\nasync function handleHighlightQuestion(questionId){\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n        isHighlighted: true,\n    })\n\n}\n\n    return (\n<div id='page-room'>\n\n    <header>\n\n        <div className='content'>\n            <img src={logoImg} alt='letmeask'/>\n          <div>\n               <RoomCode code={params.id}></RoomCode>\n           <Button isOutlined={true} onClick={handleEndRoom} > Encerrar Sala </Button>\n           </div>\n        </div>\n    </header>\n<main >\n    <div className='room-title' >\n        <h1>Sala {title}</h1>\n        {questions.length > 0 && <span> {questions.length} pergunta(s)</span>}\n    </div>\n    \n<div className='question-list'>\n    {questions.map(question=>{\nreturn (\n    <Question\n     key={question.id}\n      content={question.content}\n        author={question.author}\n        isAnswered={question.isAnswered}\n        isHighlighted={question.isHighlighted}\n        > \n        \n\n      {!question.isAnswered && (\n          <>\n          <button\n          type='button'\n          onClick={() => handleCheckQuestionAsAnswered(question.id)}\n          >\n              <img src={checkImg} alt='marcar como respondida'/>\n          </button>\n  \n          <button\n          type='button'\n          onClick={() => handleHighlightQuestion(question.id)}\n          >\n              <img src={answerImg} alt='destacar'/>\n          </button>\n</>\n          )}\n\n        <button\n        type='button'\n        onClick={() => handleDeleteQuestion(question.id)}\n        >\n            <img src={deleteImg} alt='remover pergunta'/>\n        </button>\n\n        </Question>\n)\n    })} \n</div>\n</main>\n\n\n</div>\n        )\n}"]},"metadata":{},"sourceType":"module"}