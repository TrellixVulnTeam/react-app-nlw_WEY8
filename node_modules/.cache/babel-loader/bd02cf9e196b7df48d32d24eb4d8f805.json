{"ast":null,"code":"import _slicedToArray from\"/home/cf/Documentos/nlw/react-app-nlw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useEffect,useState}from'react';import{AuthContext}from'../contexts/AuthContext';import{database}from'../services/firebase';export function useRoom(roomId){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useContext=useContext(AuthContext),user=_useContext.user;useEffect(function(){var roomRef=database.ref(\"rooms/\".concat(roomId));roomRef.on('value',function(room){var _databaseRoom$questio;var databaseRoom=room.val();var firebaseQuestions=(_databaseRoom$questio=databaseRoom.questions)!==null&&_databaseRoom$questio!==void 0?_databaseRoom$questio:{};var parsedQuestion=Object.entries(firebaseQuestions).map(function(_ref){var _value$likes,_Object$entries$find,_value$likes2;var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return{id:key,content:value.content,author:value.author,isHighlighted:value.isHighlighted,isAnswered:value.isAnswered,likeCount:Object.values((_value$likes=value.likes)!==null&&_value$likes!==void 0?_value$likes:{}).length,likeId:(_Object$entries$find=Object.entries((_value$likes2=value.likes)!==null&&_value$likes2!==void 0?_value$likes2:{}).find(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],like=_ref4[1];return like.authorId===(user===null||user===void 0?void 0:user.id);}))===null||_Object$entries$find===void 0?void 0:_Object$entries$find[0]};});setTitle(databaseRoom.title);setQuestions(parsedQuestion);});return function(){roomRef.off('value');};},[roomId,user===null||user===void 0?void 0:user.id]);return{questions:questions,title:title};}","map":{"version":3,"sources":["/home/cf/Documentos/nlw/react-app-nlw/src/hooks/useRoom.js"],"names":["useContext","useEffect","useState","AuthContext","database","useRoom","roomId","questions","setQuestions","title","setTitle","user","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestion","Object","entries","map","key","value","id","content","author","isHighlighted","isAnswered","likeCount","values","likes","length","likeId","find","like","authorId","off"],"mappings":"4JACA,OAASA,UAAT,CAAqBC,SAArB,CAAgCC,QAAhC,KAA+C,OAA/C,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAAQC,QAAR,KAAuB,sBAAvB,CAEA,MAAO,SAASC,CAAAA,OAAT,CAAiBC,MAAjB,CAAwB,eACGJ,QAAQ,CAAC,EAAD,CADX,wCACxBK,SADwB,eACbC,YADa,8BAELN,QAAQ,CAAC,EAAD,CAFH,yCAExBO,KAFwB,eAEjBC,QAFiB,+BAGdV,UAAU,CAACG,WAAD,CAHI,CAGvBQ,IAHuB,aAGvBA,IAHuB,CAM/BV,SAAS,CAAC,UAAM,CACZ,GAAMW,CAAAA,OAAO,CAAGR,QAAQ,CAACS,GAAT,iBAAsBP,MAAtB,EAAhB,CACDM,OAAO,CAACE,EAAR,CAAW,OAAX,CAAoB,SAAAC,IAAI,CAAI,2BACvB,GAAMC,CAAAA,YAAY,CAAGD,IAAI,CAACE,GAAL,EAArB,CACA,GAAMC,CAAAA,iBAAiB,wBAAGF,YAAY,CAACT,SAAhB,+DAA6B,EAApD,CACR,GAAMY,CAAAA,cAAc,CAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CAAsC,cAAkB,sFAAhBC,GAAgB,UAAXC,KAAW,UAC/E,MAAO,CACHC,EAAE,CAAEF,GADD,CAEHG,OAAO,CAAEF,KAAK,CAACE,OAFZ,CAGHC,MAAM,CAAEH,KAAK,CAACG,MAHX,CAIHC,aAAa,CAAEJ,KAAK,CAACI,aAJlB,CAKHC,UAAU,CAAEL,KAAK,CAACK,UALf,CAMHC,SAAS,CAAEV,MAAM,CAACW,MAAP,eAAcP,KAAK,CAACQ,KAApB,6CAA6B,EAA7B,EAAiCC,MANzC,CAOHC,MAAM,uBAAEd,MAAM,CAACC,OAAP,gBAAeG,KAAK,CAACQ,KAArB,+CAA8B,EAA9B,EAAkCG,IAAlC,CAAuC,kDAAEZ,GAAF,UAAMa,IAAN,gBAAgBA,CAAAA,IAAI,CAACC,QAAL,IAAkB1B,IAAlB,SAAkBA,IAAlB,iBAAkBA,IAAI,CAAEc,EAAxB,CAAhB,EAAvC,CAAF,+CAAE,qBAAqF,CAArF,CAPL,CAAP,CAQE,CATqB,CAAvB,CAWAf,QAAQ,CAACM,YAAY,CAACP,KAAd,CAAR,CACAD,YAAY,CAACW,cAAD,CAAZ,CAEK,CAjBF,EAmBC,MAAO,WAAM,CACTP,OAAO,CAAC0B,GAAR,CAAY,OAAZ,EACH,CAFD,CAGH,CAxBQ,CAwBP,CAAChC,MAAD,CAAQK,IAAR,SAAQA,IAAR,iBAAQA,IAAI,CAAEc,EAAd,CAxBO,CAAT,CA0BA,MAAM,CAAClB,SAAS,CAATA,SAAD,CAAWE,KAAK,CAALA,KAAX,CAAN,CACC","sourcesContent":["\nimport { useContext, useEffect, useState} from 'react'\nimport { AuthContext } from '../contexts/AuthContext'\nimport {database} from '../services/firebase'\n\nexport function useRoom(roomId){\nconst [questions, setQuestions] = useState([])\nconst [title, setTitle] = useState('')\nconst { user } = useContext(AuthContext)\n\n\nuseEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n   roomRef.on('value', room => {\n        const databaseRoom = room.val()\n        const firebaseQuestions = databaseRoom.questions ?? {}\nconst parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\nreturn {\n    id: key,\n    content: value.content,\n    author: value.author,\n    isHighlighted: value.isHighlighted,\n    isAnswered: value.isAnswered,\n    likeCount: Object.values(value.likes ?? {}).length,\n    likeId: Object.entries(value.likes ?? {}).find(([key,like]) => like.authorId === user?.id)?.[0],\n}})\n\nsetTitle(databaseRoom.title)\nsetQuestions(parsedQuestion)\n\n    })\n\n    return () => {\n        roomRef.off('value')\n    }\n},[roomId,user?.id])\n\nreturn{questions,title}\n}"]},"metadata":{},"sourceType":"module"}