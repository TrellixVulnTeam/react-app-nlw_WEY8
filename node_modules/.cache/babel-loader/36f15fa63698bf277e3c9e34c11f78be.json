{"ast":null,"code":"var _jsxFileName = \"/home/cf/Documentos/nlw/letmeask/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Home } from \"./pages/Home\";\nimport { createContext, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { firebase, auth, database } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n\n  async function singInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provider);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoUrl,\n        uid\n      } = result.user;\n\n      if (!displayName) {\n        throw new Error('Missin information from Google Account.');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoUrl\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        singInWithGoogle\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"hn+dqYN1IBkrX3WNaCx1TU92M3Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cf/Documentos/nlw/letmeask/src/App.js"],"names":["Home","createContext","useState","BrowserRouter","Route","NewRoom","firebase","auth","database","AuthContext","App","user","setUser","singInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup","displayName","photoUrl","uid","Error","id","name","avatar"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAAQC,aAAR,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAAQC,aAAR,EAAuBC,KAAvB,QAAmC,kBAAnC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,QAAxB,QAAuC,qBAAvC;;AAGA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASS,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAmBV,QAAQ,EAAjC;;AACD,iBAAeW,gBAAf,GAAiC;AAC9B,UAAMC,QAAQ,GAAG,IAAIR,QAAQ,CAACC,IAAT,CAAcQ,kBAAlB,EAAjB;AACA,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACU,eAAL,CAAqBH,QAArB,CAArB;;AACJ,QAAGE,MAAM,CAACL,IAAV,EAAgB;AACd,YAAM;AAACO,QAAAA,WAAD;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAgCJ,MAAM,CAACL,IAA7C;;AACA,UAAG,CAACO,WAAJ,EAAgB;AACd,cAAM,IAAIG,KAAJ,CAAW,yCAAX,CAAN;AACD;;AACHT,MAAAA,OAAO,CAAC;AACNU,QAAAA,EAAE,EAACF,GADG;AAENG,QAAAA,IAAI,EAACL,WAFC;AAGNM,QAAAA,MAAM,EAACL;AAHD,OAAD,CAAP;AAQC;AACI;;AAIH,sBACC,QAAC,aAAD;AAAA,2BACA,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAER,QAAAA,IAAF;AAAOE,QAAAA;AAAP,OAA7B;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEK;AAApC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADD;AAQD;;GA/BQK,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import { Home } from \"./pages/Home\";\nimport {createContext, useState} from 'react'\nimport{ BrowserRouter, Route} from 'react-router-dom'\nimport { NewRoom } from \"./pages/NewRoom\";\nimport {firebase, auth, database} from './services/firebase'\n\n\nexport const AuthContext = createContext({})\n\nfunction App() {\n  const [user, setUser ] = useState()\n async function singInWithGoogle(){\n    const provider = new firebase.auth.GoogleAuthProvider()\n    const result = await auth.signInWithPopup(provider)\nif(result.user) {\n  const {displayName , photoUrl, uid} = result.user\n  if(!displayName){\n    throw new Error ('Missin information from Google Account.')\n  }\nsetUser({\n  id:uid,\n  name:displayName,\n  avatar:photoUrl\n})\n\n\n\n}\n    }\n\n\n  \n  return (\n   <BrowserRouter>\n   <AuthContext.Provider value={{ user,singInWithGoogle}}>\n   <Route path='/' exact component={Home}/>\n   <Route path='/rooms/new' component={NewRoom}/>\n   </AuthContext.Provider>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}