{"ast":null,"code":"var _jsxFileName = \"/home/cf/Documentos/nlw/letmeask/src/pages/Room.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"../components/Button\";\nimport '.././styles/room.scss';\nimport logoImg from \"../images/logo.svg\";\nimport { RoomCode } from \"../components/RoomCode\";\nimport { useParams } from 'react-router-dom';\nimport { database } from \"../services/firebase\";\nimport { AuthContext } from '../contexts/AuthContext';\nimport { useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const params = useParams();\n  const roomId = params.id;\n  const [questions, setQuestions] = useState('');\n  const [title, setTitle] = useState('');\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.once('value', room => {\n      var _databaseRoom$questio;\n\n      const databaseRoom = room.val();\n      const firebaseQuestions = (_databaseRoom$questio = databaseRoom.question) !== null && _databaseRoom$questio !== void 0 ? _databaseRoom$questio : {};\n      const parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\n        return {\n          id: key,\n          content: value.content,\n          author: value.author,\n          isHighlighted: value.isHighlighted,\n          isAnswered: value.isAnswered\n        };\n      });\n      setTitle(databaseRoom.title);\n      setQuestions(parsedQuestion);\n    });\n  }, [roomId]);\n  const [newQuestion, setNewQuenstion] = useState('');\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('voce nao fez login');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHighlighted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuenstion('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: params.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voce quer perguntar?\",\n          onChange: event => setNewQuenstion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.avatar,\n              alt: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !user,\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), JSON.stringify(questions)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Room, \"H3OPpZoRm0dWtb8TBtjK4bEDH3w=\", false, function () {\n  return [useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/cf/Documentos/nlw/letmeask/src/pages/Room.js"],"names":["Button","RoomCode","useParams","database","AuthContext","useContext","useEffect","useState","Room","user","params","roomId","id","questions","setQuestions","title","setTitle","roomRef","ref","once","room","databaseRoom","val","firebaseQuestions","question","parsedQuestion","Object","entries","map","key","value","content","author","isHighlighted","isAnswered","newQuestion","setNewQuenstion","handleSendQuestion","event","preventDefault","trim","Error","name","avatar","push","logoImg","length","target","JSON","stringify"],"mappings":"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","sourcesContent":["import { Button } from \"../components/Button\";\nimport '.././styles/room.scss'\nimport logoImg from '../images/logo.svg'\nimport { RoomCode } from \"../components/RoomCode\";\nimport {useParams} from 'react-router-dom'\nimport { database } from \"../services/firebase\";\nimport { AuthContext } from '../contexts/AuthContext'\nimport { useContext, useEffect, useState} from 'react'\n\nexport function Room(){\n    const {user} = useContext(AuthContext)\nconst params = useParams()\nconst roomId = params.id\nconst [questions, setQuestions] = useState('')\nconst [title, setTitle] = useState('')\n\n\nuseEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.once('value', room => {\n        const databaseRoom = room.val()\n        const firebaseQuestions = databaseRoom.question ?? {}\nconst parsedQuestion = Object.entries(firebaseQuestions).map(([key, value]) => {\nreturn {\n    id: key,\n    content: value.content,\n    author: value.author,\n    isHighlighted: value.isHighlighted,\n    isAnswered: value.isAnswered\n}})\n\nsetTitle(databaseRoom.title)\nsetQuestions(parsedQuestion)\n\n    })\n},[roomId])\n\n\nconst [newQuestion, setNewQuenstion] = useState('')\n\n\nasync function handleSendQuestion(event){\n    event.preventDefault()\nif(newQuestion.trim()===''){\n    return;\n}\nif(!user){\n    throw new Error('voce nao fez login');\n}\n\nconst question = {\n    content: newQuestion,\n    author: {\n        name: user.name ,\n        avatar: user.avatar\n    },\n    isHighlighted: false,\n    isAnswered: false\n};\n\nawait database.ref(`rooms/${roomId}/questions`).push(question);\nsetNewQuenstion('')\n}\n    return (\n<div id='page-room'>\n\n    <header>\n\n        <div className='content'>\n            <img src={logoImg} alt='letmeask'/>\n           <RoomCode code={params.id}></RoomCode>\n        </div>\n    </header>\n<main >\n    <div className='room-title' >\n        <h1>Sala {title}</h1>\n        {questions.length > 0 && <span> {questions.length} pergunta(s)</span>}\n    </div>\n    <form onSubmit={handleSendQuestion} >\n        <textarea \n        placeholder='O que voce quer perguntar?'\n        onChange={event => setNewQuenstion(event.target.value)}\n        value={newQuestion}\n         />\n        <div className ='form-footer'>\n           {user ? (\n               <div className='user-info'>\n                   <img src={user.avatar}  alt={user.name}/> \n                   <span>{user.name}</span>\n               </div>\n           ) : (\n               <span>\n                Para enviar uma pergunta, <button>faça seu login</button>\n            </span>\n            )}\n            <Button type='submit' disabled={!user} >Enviar pergunta</Button>\n        </div>\n    </form>\n\n    {JSON.stringify(questions)}\n</main>\n\n\n</div>\n        )\n}"]},"metadata":{},"sourceType":"module"}