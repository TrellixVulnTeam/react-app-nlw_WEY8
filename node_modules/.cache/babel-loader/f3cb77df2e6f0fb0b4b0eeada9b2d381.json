{"ast":null,"code":"var _jsxFileName = \"/home/cf/Documentos/nlw/letmeask/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Home } from \"./pages/Home\";\nimport { createContext, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n\n  function singInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).then(result => {\n      if (result.user) {\n        const {\n          displayName,\n          photoUrl,\n          uid\n        } = result.user;\n\n        if (!displayName) {\n          throw new Error('Missin information from Google Account.');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoUrl\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        singInWithGoogle\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"hn+dqYN1IBkrX3WNaCx1TU92M3Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cf/Documentos/nlw/letmeask/src/App.js"],"names":["Home","createContext","useState","BrowserRouter","Route","NewRoom","AuthContext","App","user","setUser","singInWithGoogle","provider","firebase","auth","GoogleAuthProvider","signInWithPopup","then","result","displayName","photoUrl","uid","Error","id","name","avatar"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAAQC,aAAR,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAAQC,aAAR,EAAuBC,KAAvB,QAAmC,kBAAnC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASM,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAmBP,QAAQ,EAAjC;;AACA,WAASQ,gBAAT,GAA2B;AACzB,UAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACC,IAAT,CAAcC,kBAAlB,EAAjB;AACAD,IAAAA,IAAI,CAACE,eAAL,CAAqBJ,QAArB,EAA+BK,IAA/B,CAAoCC,MAAM,IAAI;AAClD,UAAGA,MAAM,CAACT,IAAV,EAAgB;AACd,cAAM;AAACU,UAAAA,WAAD;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAgCH,MAAM,CAACT,IAA7C;;AACA,YAAG,CAACU,WAAJ,EAAgB;AACd,gBAAM,IAAIG,KAAJ,CAAW,yCAAX,CAAN;AACD;;AACHZ,QAAAA,OAAO,CAAC;AACNa,UAAAA,EAAE,EAACF,GADG;AAENG,UAAAA,IAAI,EAACL,WAFC;AAGNM,UAAAA,MAAM,EAACL;AAHD,SAAD,CAAP;AAQC;AACI,KAfD;AAkBD;;AACD,sBACC,QAAC,aAAD;AAAA,2BACA,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEX,QAAAA,IAAF;AAAOE,QAAAA;AAAP,OAA7B;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEV;AAAjC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEK;AAApC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADD;AAQD;;GA/BQE,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import { Home } from \"./pages/Home\";\nimport {createContext, useState} from 'react'\nimport{ BrowserRouter, Route} from 'react-router-dom'\nimport { NewRoom } from \"./pages/NewRoom\";\n\nexport const AuthContext = createContext({})\n\nfunction App() {\n  const [user, setUser ] = useState()\n  function singInWithGoogle(){\n    const provider = new firebase.auth.GoogleAuthProvider()\n    auth.signInWithPopup(provider).then(result => {\nif(result.user) {\n  const {displayName , photoUrl, uid} = result.user\n  if(!displayName){\n    throw new Error ('Missin information from Google Account.')\n  }\nsetUser({\n  id:uid,\n  name:displayName,\n  avatar:photoUrl\n})\n\n\n\n}\n    })\n\n\n  }\n  return (\n   <BrowserRouter>\n   <AuthContext.Provider value={{ user,singInWithGoogle}}>\n   <Route path='/' exact component={Home}/>\n   <Route path='/rooms/new' component={NewRoom}/>\n   </AuthContext.Provider>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}