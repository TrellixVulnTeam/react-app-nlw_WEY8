{"ast":null,"code":"var _jsxFileName = \"/home/cf/Documentos/nlw/letmeask/src/pages/Room.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"../components/Button\";\nimport '.././styles/room.scss';\nimport logoImg from \"../images/logo.svg\";\nimport { RoomCode } from \"../components/RoomCode\";\nimport { useParams } from 'react-router-dom';\nimport { database } from \"../services/firebase\";\nimport { AuthContext } from '../contexts/AuthContext';\nimport { useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const params = useParams();\n  const roomId = params.id;\n  const [newQuestion, setNewQuenstion] = useState('');\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('voce nao fez login');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHighlighted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuenstion('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: params.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sala React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" 4 perguntas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voce quer perguntar?\",\n          onChange: event => setNewQuenstion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !user,\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Room, \"JbsymAq6xddyCPvBoE7q46vNsSQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/cf/Documentos/nlw/letmeask/src/pages/Room.js"],"names":["Button","RoomCode","useParams","database","AuthContext","useContext","useState","Room","user","params","roomId","id","newQuestion","setNewQuenstion","handleSendQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHighlighted","isAnswered","ref","push","logoImg","target","value"],"mappings":"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","sourcesContent":["import { Button } from \"../components/Button\";\nimport '.././styles/room.scss'\nimport logoImg from '../images/logo.svg'\nimport { RoomCode } from \"../components/RoomCode\";\nimport {useParams} from 'react-router-dom'\nimport { database } from \"../services/firebase\";\nimport { AuthContext } from '../contexts/AuthContext'\nimport { useContext, useState} from 'react'\n\nexport function Room(){\n    const {user} = useContext(AuthContext)\nconst params = useParams()\nconst roomId = params.id\nconst [newQuestion, setNewQuenstion] = useState('')\n\n\nasync function handleSendQuestion(event){\n    event.preventDefault()\nif(newQuestion.trim()===''){\n    return\n}\nif(!user){\n    throw new Error('voce nao fez login')\n}\n\nconst question = {\n    content: newQuestion,\n    author: {\n        name: user.name,\n        avatar: user.avatar\n    },\n    isHighlighted: false,\n    isAnswered: false\n}\n\nawait database.ref(`rooms/${roomId}/questions`).push(question)\nsetNewQuenstion('')\n}\n    return (\n<div id='page-room'>\n\n    <header>\n\n        <div className='content'>\n            <img src={logoImg} alt='letmeask'/>\n           <RoomCode code={params.id}></RoomCode>\n        </div>\n    </header>\n<main >\n    <div className='room-title' >\n        <h1>Sala React</h1>\n        <span> 4 perguntas</span>\n    </div>\n    <form onSubmit={handleSendQuestion} >\n        <textarea \n        placeholder='O que voce quer perguntar?'\n        onChange={event => setNewQuenstion(event.target.value)}\n        value={newQuestion}\n         />\n        <div className ='form-footer'>\n            <span>\n                Para enviar uma pergunta, <button>fa√ßa seu login</button>\n            </span>\n            <Button type='submit' disabled={!user} >Enviar pergunta</Button>\n        </div>\n    </form>\n</main>\n\n\n</div>\n        )\n}"]},"metadata":{},"sourceType":"module"}